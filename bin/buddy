#!/usr/bin/env node

var program = require('commander')
	, fs = require('fs')
	, path = require('path')
	, Builder = require('../lib/Builder')
	, indent = require('../lib/utils').indent;

var exampleHeader = [
	'  Configuration:'
	, ''
	, '    Build, dependencies, and plugin settings are defined in a "buddy.js" config file'
	, '    that should be located in the root of your project directory:'
	, ''

	].join('\n')
	, exampleFooter = [
	''
	, '    Visit https://github.com/popeindustries/buddy#readme for more details.'
	, ''
	].join('\n');

program
	.version(require('../package.json').version)
	.usage('[options] <command> [path/to/buddy.json]>')
	.option('-c, --compress', 'compress output for production deployment')
	.option('-l, --lint', 'check output for syntax and logic errors');

program
	.command('install [config]')
	.description('install dependencies')
	.action(function(config) {
		new Builder().install(config);
	});

program
	.command('build [config]')
	.description('build js and css sources')
	.action(function(config){
		new Builder().build(config, program.compress, program.lint);
	});

program
	.command('watch [config]')
	.description('watch js and css source files and build changes')
	.action(function(config){
		new Builder().watch(config, program.compress);
	});

program
	.command('deploy [config]')
	.description('build compressed js and css sources')
	.action(function(config){
		new Builder().deploy(config);
	});

program
	.command('clean [config]')
	.description('remove all previously created files and directories')
	.action(function(config){
		new Builder().initialize(config).clean();
	});

program.on('--help', function(){
  console.log(exampleHeader);
  console.log(indent(fs.readFileSync(path.resolve(__dirname, '../buddy.js'), 'utf8'), 4));
  console.log(exampleFooter);
});

program.parse(process.argv);