// Generated by CoffeeScript 1.4.0
var File, JSFile,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

File = require('./file');

module.exports = JSFile = (function(_super) {

  __extends(JSFile, _super);

  function JSFile(filepath, basepath, compilers, module) {
    var _ref;
    this.module = module;
    JSFile.__super__.constructor.call(this, 'js', filepath, basepath, compilers);
    this.moduleId = (_ref = this.module) != null ? _ref.getModuleId(this.qualifiedFilename) : void 0;
  }

  JSFile.prototype.parseContents = function(modular, fn) {
    var _this = this;
    return JSFile.__super__.parseContents.call(this, function(err, data) {
      if (err) {
        return fn(err);
      }
      if (modular) {
        _this.dependencies = _this.module.getModuleDependencies(data, _this.moduleId);
      }
      return fn(null, data);
    });
  };

  JSFile.prototype.getContents = function(options, fn) {
    var _this = this;
    return JSFile.__super__.getContents.call(this, options, function(err, data) {
      if (err) {
        return fn(err);
      } else {
        return fn(null, options.modular ? _this.module.wrapModuleContents(data, _this.moduleId) : data);
      }
    });
  };

  return JSFile;

})(File);
