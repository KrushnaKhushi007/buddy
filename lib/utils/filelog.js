// Generated by CoffeeScript 1.4.0
var NAME, RE_ABSOLUTE, clean, debug, existsSync, fs, path, strong, _ref;

fs = require('fs');

path = require('path');

existsSync = require('./fs').existsSync;

_ref = require('./notify'), debug = _ref.debug, strong = _ref.strong;

NAME = '.buddy-filelog';

RE_ABSOLUTE = /^([a-z]:\\)|^\//i;

exports.filename = null;

exports.files = [];

exports.load = function(fn) {
  exports.filename = path.resolve(NAME);
  if (existsSync(exports.filename)) {
    return fs.readFile(exports.filename, 'utf8', function(err, data) {
      if (err) {
        return fn(err);
      }
      try {
        exports.files = JSON.parse(data);
        if (exports.files.length) {
          if ((path.sep === '/' && data.indexOf('\\') !== -1) || (path.sep === '\\' && data.indexOf('/') !== -1) || RE_ABSOLUTE.test(exports.files[0])) {
            clean(function(err) {
              return fn();
            });
          }
        }
      } catch (err) {
        return fn(err);
      }
      return fn();
    });
  } else {
    return fn();
  }
};

exports.add = function(newFiles, fn) {
  var _this = this;
  newFiles.forEach(function(file) {
    file = path.relative(process.cwd(), file);
    if (exports.files.indexOf(file) === -1) {
      exports.files.push(file);
      return debug("adding to filelog: " + (strong(file)), 2);
    }
  });
  return fs.writeFile(exports.filename, JSON.stringify(exports.files), 'utf8', function(err) {
    if (fn) {
      if (err) {
        return fn(err);
      }
      return fn(null, exports.files);
    }
  });
};

exports.clean = clean = function(fn) {
  exports.files = [];
  return fs.writeFile(exports.filename, JSON.stringify(exports.files), 'utf8', function(err) {
    debug('cleaned filelog', 2);
    if (fn) {
      if (err) {
        return fn(err);
      }
      return fn();
    }
  });
};
